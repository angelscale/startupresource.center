name: main

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Prepare Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Prepare Dependency Cache
        uses: actions/cache@v2
        with:
          path: |
            web/node_modules/
          key: ${{ runner.os }}-web-deps-${{ hashFiles('web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-web-deps-
      - name: Prepare Dependencies
        working-directory: web
        run: yarn install
      - name: Lint
        working-directory: web
        run: yarn lint
  lint-cms:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Prepare Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Prepare Dependency Cache
        uses: actions/cache@v2
        with:
          path: |
            cms/node_modules/
          key: ${{ runner.os }}-cms-deps-${{ hashFiles('cms/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cms-deps-
      - name: Prepare Dependencies
        working-directory: cms
        run: yarn install
      - name: Lint
        working-directory: cms
        run: yarn lint
  gitguardian:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
  build-web:
    runs-on: ubuntu-latest
    needs:
      - lint-web
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Prepare Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Prepare Dependency Cache
        uses: actions/cache@v2
        with:
          path: |
            web/node_modules/
          key: ${{ runner.os }}-web-deps-${{ hashFiles('web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-web-deps-
      - name: Prepare Content Cache
        uses: actions/cache@v2
        with:
          path: |
            web/.cache/
            web/public/
          key: ${{ runner.os }}-web-content-${{ hashFiles('web/public') }}
          restore-keys: |
            ${{ runner.os }}-web-content-
      - name: Prepare Dependencies
        working-directory: web
        run: yarn install
      - name: Build
        working-directory: web
        env:
          FIREBASE_ADMIN_CREDENTIALS: ${{ secrets.FIREBASE_ADMIN_CREDENTIALS }}
        run: yarn build
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: web/public
  build-cms:
    needs:
      - lint-cms
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Prepare Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Prepare Dependency Cache
        uses: actions/cache@v2
        with:
          path: |
            cms/node_modules/
          key: ${{ runner.os }}-cms-deps-${{ hashFiles('cms/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-cms-deps-
      - name: Prepare Dependencies
        working-directory: cms
        run: yarn install
      - name: Build
        working-directory: cms
        run: yarn build
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: cms
          path: cms/build
  deploy-union:
    runs-on: ubuntu-latest
    needs:
      - build-web
      - build-cms
    environment:
      name: union
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Tag Union
        uses: EndBug/latest-tag@latest
        with:
          tag-name: union
      - name: Download Web Artifact
        uses: actions/download-artifact@v2
        with:
          name: web
          path: web/public
      - name: Download CMS Artifact
        uses: actions/download-artifact@v2
        with:
          name: cms
          path: cms/build
      - name: Deploy
        id: deploy
        uses: joinflux/firebase-action@master
        with:
          args: hosting:channel:deploy --expires 30d union | tee output.txt && echo \"::set-output name=url::$(grep 'Channel URL' output.txt | grep -o 'https://[^ ]*')\"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  deploy-stage:
    runs-on: ubuntu-latest
    needs: deploy-union
    environment:
      name: stage
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Tag Stage
        uses: EndBug/latest-tag@latest
        with:
          tag-name: stage
      - name: Download Web Artifact
        uses: actions/download-artifact@v2
        with:
          name: web
          path: web/public
      - name: Download CMS Artifact
        uses: actions/download-artifact@v2
        with:
          name: cms
          path: cms/build
      - name: Deploy
        id: deploy
        uses: joinflux/firebase-action@master
        with:
          args: hosting:channel:deploy --expires 30d stage | tee output.txt && echo \"::set-output name=url::$(grep 'Channel URL' output.txt | grep -o 'https://[^ ]*')\"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-stage
    environment:
      name: production
      url: https://startupresource.center
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Tag Prod
        uses: EndBug/latest-tag@latest
        with:
          tag-name: prod
      - name: Download Web Artifact
        uses: actions/download-artifact@v2
        with:
          name: web
          path: web/public
      - name: Download CMS Artifact
        uses: actions/download-artifact@v2
        with:
          name: cms
          path: cms/build
      - name: Prepare Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Prepare Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            functions/.cache/
            functions/node_modules/
          key: ${{ runner.os }}-functions-${{ hashFiles('functions/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-functions-
      - name: Prepare Dependencies
        working-directory: functions
        env:
          FB_ADMIN_CREDENTIALS: ${{ secrets.FIREBASE_ADMIN_CREDENTIALS }}
        run: yarn install
      - name: Deploy
        uses: joinflux/firebase-action@master
        with:
          args: deploy --except functions
        env:
          FB_ADMIN_CREDENTIALS: ${{ secrets.FIREBASE_ADMIN_CREDENTIALS }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
