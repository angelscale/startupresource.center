name: main

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Prepare Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Prepare Dependencies
        run: yarn install
      - name: Lint
        run: yarn lint
  lint-cms:
    defaults:
      run:
        working-directory: cms
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Prepare Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Prepare Dependencies
        run: yarn install
      - name: Lint
        run: yarn lint
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Prepare Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Prepare Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            .cache/
            public/
            node_modules/
          key: ${{ runner.os }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Prepare Dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Upload Package
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: public
  build-cms:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cms
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Prepare Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Prepare Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            cms/.cache/
            cms/build/
            cms/node_modules/
          key: ${{ runner.os }}-build-cms-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-cms-
      - name: Prepare Dependencies
        run: yarn install
      - name: Build
        run: yarn build
      - name: Upload Package
        uses: actions/upload-artifact@v2
        with:
          name: cms
          path: cms/build
  deploy-union:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-cms
    environment:
      name: union
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Package
        uses: actions/download-artifact@v2
        with:
          name: web
          path: public
      - name: Download Package
        uses: actions/download-artifact@v2
        with:
          name: cms
          path: cms/build
      - name: Deploy
        id: deploy
        uses: joinflux/firebase-action@master
        with:
          args: hosting:channel:deploy --expires 30d union | tee output.txt && echo \"::set-output name=url::$(grep 'Channel URL' output.txt | grep -o 'https://[^ ]*')\"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  deploy-stage:
    runs-on: ubuntu-latest
    needs: deploy-union
    environment:
      name: stage
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Package
        uses: actions/download-artifact@v2
        with:
          name: web
          path: public
      - name: Download Package
        uses: actions/download-artifact@v2
        with:
          name: cms
          path: cms/build
      - name: Deploy
        uses: joinflux/firebase-action@master
        with:
          args: hosting:channel:deploy --expires 30d stage | tee output.txt && echo \"::set-output name=url::$(grep 'Channel URL' output.txt | grep -o 'https://[^ ]*')\"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-stage
    environment:
      name: production
      url: https://startupresource.center
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Package
        uses: actions/download-artifact@v2
        with:
          name: web
          path: public
      - name: Download Package
        uses: actions/download-artifact@v2
        with:
          name: cms
          path: cms/build
      - name: Deploy
        uses: joinflux/firebase-action@master
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
